#23-3-1認識 ndarray的屬性
'''
ndarray.dtype:陣列元素型態
ndarray.itemsize:陣列元素資料型態大小(或稱所占空間)，單位:位元組
ndarray.ndim:陣列的維度
ndarray.shape:陣列的外形，可由此了解每一維度元素的個數，此資料形態是元組
ndarray.size:陣列元素個數
'''
#23-3-2 使用array()建立一維陣列
'''
語法:
numpy.array(object,dtype=None)
上述參數意義如下:
object:陣列資料
dtype:資料類型，如果省略將使用可以容納資料最省的類型
建立時在"小括號()"內填上"中括號[]"，然後將陣列數值放在"中括號[]"內，彼此用"逗號(,)"隔開
'''
# ch23_1.py
import numpy as np

row1 = [1, 2, 3]
arr1 = np.array(row1, ndmin=2)
print(f"陣列維度 = {arr1.ndim}")
print(f"陣列外型 = {arr1.shape}")
print(f"陣列大小 = {arr1.size}")
print("陣列內容")
print(arr1)
print("-"*70)
row2 = [4, 5, 6]
arr2 = np.array([row1,row2], ndmin=2)   # ndmin=2可以省略
print(f"陣列維度 = {arr2.ndim}")
print(f"陣列外型 = {arr2.shape}")
print(f"陣列大小 = {arr2.size}")
print("陣列內容")
print(arr2)

print(sep="")

# ch23_1_1.py
import numpy as np

row1 = [1, 2, 3]
arr1 = np.array(row1, ndmin=2)
print(f"陣列維度 = {arr1.ndim}")
print(f"陣列外型 = {arr1.shape}")
print(f"陣列大小 = {arr1.size}")
print("陣列內容")
print(arr1)
print("-"*70)
row2 = [4, 5, 6]
arr2 = np.array([row1,row2])
print(f"陣列維度 = {arr2.ndim}")
print(f"陣列外型 = {arr2.shape}")
print(f"陣列大小 = {arr2.size}")
print("陣列內容")
print(arr2)

print(sep="")

# ch23_2.py
import numpy as np

x = np.array([[1, 2, 3], [4, 5, 6]])
print(f"陣列維度 = {x.ndim}")
print(f"陣列外型 = {x.shape}")
print(f"陣列大小 = {x.size}")
print("陣列內容")
print(x)

print(sep="")

# ch23_3.py
import numpy as np

x = np.array([[1, 2, 3], [4, 5, 6]])
print(f"x[0][1] = {x[0][1]}")
print(f"x[1][2] = {x[1][2]}")
# 或是
print(f"x[0,1] = {x[0,1]}")
print(f"x[1,2] = {x[1,2]}")
# 索引整列
print(f"x[0] = {x[0]}")
print(f"x[1] = {x[1]}")

print(sep="")

# ch23_4.py
import numpy as np

x1 = np.zeros(3)
print(x1)
print("-"*70)
x2 = np.zeros((2, 3), dtype=np.uint8)     
print(x2)

print(sep="")

# ch23_5.py
import numpy as np

x1 = np.ones(3)
print(x1)
print("-"*70)
x2 = np.ones((2, 3), dtype=np.uint8)     
print(x2)

print(sep="")

# ch23_6.py
import numpy as np

x1 = np.empty(3)
print(x1)
print("-"*70)
x2 = np.empty((2, 3), dtype=np.uint8)     
print(x2)

print(sep="")