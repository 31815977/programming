'''
max(arr,axis=i):傳回i軸陣列最大元素
maximum(arr1,arr2):傳回陣列中相同位置較大的元素值
min(arr,axis=i):傳回i軸陣列最小元素
minimum(arr1,arr2):傳回陣列中相同位置較小的元素
all(arr,axis=i):回應i軸陣列是否全部為True，預設axis=0
any(arr,axis=i):回應i軸陣列是否有任一個元素為True，預設axis=0
unique(arr,axis=i):刪除i軸陣列重複的列或行(或頁)
unravel_index(i,(m,n,...)):將一維索引i轉為(m,n,...)索引
ravel_multi_index(multi_index,(m,n)):將維度(m,n,...)的索引轉為一維的索引
where(condition):將陣列作關係運算式，然後導出陣列
where(condition,a,b):如果條件值成立，則位置是a，否則是b
sum(a,axis=i):傳回指定軸(axis)的陣列a元素的總和
prod(arr,axis=i):傳回指定軸(axis)的陣列元素的乘績
diff(arr,n,axis=i):傳回指定軸元素差(後一個元素值減去前一個元素值)，n是代表執行幾次
'''
import numpy as np
print(np.max([1,2,3]))

print(sep="")

print(np.max(np.arange(100).reshape(10,10)))

print(sep="")

print(np.maximum([1,5,10],[3,4,9]))

print(sep="")

print(np.min([1,2,3]))

print(sep="")

print(np.min(np.arange(100).reshape(10,10)))

print(sep="")

print(np.minimum([1,5,10],[3,4,9]))

print(sep="")

print(np.all(np.array([1,2,3])))

print(sep="")

print(np.all(np.array([1,0,3])))

print(sep="")

print(np.any(np.array([1,0,3])))

print(sep="")

print(np.any(np.array([0,0,0])))

print(sep="")

x=np.array([[1,2,3],
      [7,8,9],
      [7,8,9]])
y=np.unique(x,axis=0)
print(y)

print(sep="")

x=np.array([[1,12,3],
      [4,15,6],
      [7,18,9]])
y=np.unravel_index(4,x.shape)
print(y)

print(sep="")

index=np.ravel_multi_index([[1,1,0],
              [1,0,2]],(3,4))
print(index)

print(sep="")

x=np.array([1,2,3,4,5])
y=np.where(x>3)
print(y)

print(sep="")

x=np.array([1,5,9])
y=np.where(x>5,10,100)
print(y)

print(sep="")

x=np.sum([])
print(x)

print(sep="")

x=np.sum([1,2,3])
print(x)

print(sep="")

x=np.sum([1.2,1.5,3.1],dtype=np.int32)
print(x)

print(sep="")

x=np.prod([])
print(x)

print(sep="")

x=np.prod([1,2,3])
print(x)

print(sep="")

x=np.prod([[1,2],[3,4]])
print(x)

print(sep="")

x=np.prod([[1,2],[3,4]],axis=1)
print(x)

print(sep="")

x=np.array([1,4,7,0,5])
print(np.diff(x))
print(np.diff(x,axis=0))

print(sep="")

x=np.array([[1,4,6,10],[0,2,5,9]])
print(np.diff(x))
print(np.diff(x,axis=0))
